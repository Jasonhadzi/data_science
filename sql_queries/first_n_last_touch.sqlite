select *
from page_visits
limit 10;

--How many campaigns and sources does CoolTShirts use? Which source is used for each campaign?
select count(distinct utm_campaign) as 'campaigns'
from page_visits;

select count(distinct utm_source) as 'sources'
from page_visits;

select distinct utm_campaign, utm_source
from page_visits;

-- What pages are on the CoolTShirts website?
select distinct page_name
from page_visits;


--How many first touches is each campaign responsible for?

WITH first_touch AS (
  SELECT user_id,
    MIN(timestamp) as first_touch_at
  FROM page_visits
  GROUP BY user_id
),
ft_attr AS (
  SELECT ft.user_id,
    ft.first_touch_at,
    pv.utm_source,
		pv.utm_campaign
  FROM first_touch ft
  JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.first_touch_at = pv.timestamp
)
SELECT ft_attr.utm_campaign, ft_attr.utm_source, count(*)
FROM ft_attr
GROUP BY 1, 2
ORDER BY 3 DESC;

-- How many last touches is each campaign responsible for?
WITH last_touch AS (
  SELECT user_id,
    MAX(timestamp) as last_touch_at
  FROM page_visits
  GROUP BY user_id
),
ft_attr AS (
  SELECT ft.user_id,
    ft.last_touch_at,
    pv.utm_source,
		pv.utm_campaign
  FROM last_touch ft
  JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.last_touch_at = pv.timestamp
)
SELECT ft_attr.utm_campaign, ft_attr.utm_source, count(*)
FROM ft_attr
GROUP BY 1, 2
ORDER BY 3 DESC;

-- How many visitors make a purchase?
select count(*)
from page_visits
where page_name = '4 - purchase';

-- How many last touches on the purchase page is each campaign responsible for?
WITH last_touch AS (
  SELECT user_id,
    MAX(timestamp) as last_touch_at
  FROM page_visits
  WHERE page_name = '4 - purchase'
  GROUP BY user_id
),
ft_attr AS (
  SELECT ft.user_id,
    ft.last_touch_at,
    pv.utm_source,
		pv.utm_campaign
  FROM last_touch ft
  JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.last_touch_at = pv.timestamp
)
SELECT ft_attr.utm_campaign, ft_attr.utm_source, count(*) as 'num of purchases'
FROM ft_attr
GROUP BY 1, 2
ORDER BY 3 DESC;
